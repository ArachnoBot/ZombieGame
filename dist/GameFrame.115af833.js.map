{"version":3,"sources":["assets/TileStuff/map.json","Level1.js","Level2.js","GameFrame.js"],"names":["module","exports","_Tileset","_interopRequireDefault","require","_Bullet","_","_2","_map","_Idle","_Walk","_Run","_Shot","_Dead","_Idle2","_Walk2","_Run2","_Attack","_Dead2","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_get","Reflect","get","bind","target","property","receiver","base","_superPropBase","desc","Object","getOwnPropertyDescriptor","call","arguments","length","value","apply","object","hasOwnProperty","_getPrototypeOf","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","i","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","settings","config","Level1","_Phaser$Scene","_super","preload","load","image","background1Url","bg","background4Url","tilesImageUrl","bulletUrl","tilemapTiledJSON","mapUrl","soldierSize","frameWidth","frameHeight","zombieSize","spritesheet","soldierIdleUrl","soldierWalkUrl","soldierRunUrl","soldierShotUrl","soldierDeadUrl","zombieIdleUrl","zombieWalkUrl","zombieRunUrl","zombieAttackUrl","zombieDeadUrl","data","_this","console","log","bgWidth","bgHeight","physics","world","setBounds","width","height","setBoundsCollision","add","setScale","map","make","tilemap","tileWidth","tileHeight","tileset","addTilesetImage","layer","createLayer","setCollisionBetween","text","fontSize","color","soldier","createSoldier","bullets","group","classType","Bullet","runChildUpdate","zombies","Zombie","overlap","bullet","tile","destroy","collides","zombie","hasKilled","die","remove","soldierZombieCollider","soldierDead","attacking","body","velocity","x","anims","play","on","Phaser","Animations","Events","ANIMATION_COMPLETE_KEY","collider","soldierLocation","y","toString","cursors","keyboard","createCursorKeys","shift","addKey","Input","Keyboard","KeyCodes","SHIFT","cameras","main","setZoom","startFollow","createSoldierAnimations","createZombieAnimations","update","time","delta","soldierController","checkSoldierLocation","soldierDeadTimer","restartTime","scene","start","left","isDown","onFloor","soldierRunSpeed","soldierWalkSpeed","right","getName","setOffset","soldierOffsetXLeft","soldierOffsetY","soldierDirection","soldierOffsetXRight","up","down","soldierShotTimer","fire","JustDown","space","string","tileX","tileY","sprite","gravity","setSize","soldierSizeX","soldierSizeY","setCollideWorldBounds","createZombie","zombieSizeX","zombieSizeY","zombieOffsetXRight","zombieOffsetY","frames","generateFrameNumbers","end","frameRate","repeat","frame","Scene","_Phaser$Physics$Arcad","_super2","_this2","direction","dead","attack","targetX","position","_this3","zombieOffsetXLeft","once","setActive","Math","Difference","zombieWalkSpeed","blocked","zombieDirection","Physics","Arcade","Sprite","_Phaser$Physics$Arcad2","_super3","_this4","shooter","setPosition","speed","bulletSpeed","lifespan","preUpdate","Level2","background2Url","zombieList1","push","zombieList2","forEach","bodyX","bodyY","targetY","_this5","_Level","_Level2","game","zombieRunSpeed","window","onload","gameConfig","type","AUTO","scale","mode","Scale","FIT","autoCenter","CENTER_BOTH","pixelArt","backgroundColor","arcade","debug","Bootloader","Game","focus"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG;EAAE,kBAAkB,EAAC,CAAC,CAAC;AGAxC,EHCC,EGDDuS,MAAA,AHCS,EAAC,CGDVrS,CHCY,qBGDZ,CAAAC,OAAA;AACA,EHCC,EGDDqS,OAAA,CHCW,EGDXtS,AHCY,KAAK,iBGDjB,CAAAC,OAAA;AAA6B,EHE5B,OGF4BD,CHEpB,EAAC,CACF,mBGHqBgB,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,IHIpB,KGJoBG,CHId,EAAC,CAAC,CAAC,EAAE,CGJSH,AHIR,EAAE,CGJM,AHIL,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EGJ/BG,AHIiC,CAAC,EAAE,CAAC,EAAE,CGJvC,AHIwC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CGJ/DC,AHIgE,EAAE,CAAC,EAAE,CGJrE,AHIsE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EGJ3FA,AHI6F,CAAC,EAAE,CAAC,EGJjG,AHImG,CGJnGC,AHIoG,EAAE,CAAC,EAAE,CAAC,EGJ1G,AHI4G,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CGJxHL,AHIyH,EAAE,CGJ3H,AHI4H,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CGJ7IA,AHI8I,EAAE,CGJhJ,CHIkJ,EAAE,EAAE,EACvK,EAAE,EAAE,CAAC,EAAE,CAAC,CGLSA,CHKP,CAAC,CGLM,CHKJ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CGLLA,AHKM,EAAE,CGLR,AHKS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CGLjCI,CHKmC,CAAC,EAAE,CAAC,CGLvC,CHKyC,CAAC,EGL1CJ,AHK4C,CAAC,EGL7C,AHK+C,CGL/CM,AHKgD,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EGLzD,AHK2D,CAAC,EAAE,CAAC,CGL/DF,CHKiE,CAAC,EAAE,CAAC,CGLrE,CHKuE,CAAC,EGLxEJ,AHK0E,CAAC,EGL3E,AHK6E,CAAC,EAAE,CAAC,CGLjFI,CHKmF,CAAC,EAAE,CAAC,CGLvF,CAAAG,AHKyF,CAAC,EAAE,CAAC,EAAE,CAAC,EGLhG,AHKkG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EGLrHP,AHKuH,CAAC,EGLxH,AHK0H,CAAC,EAAE,CAAC,CGL9HG,CHKgI,CAAC,EAAE,CAAC,EGLpI,AHKsI,CGLtIH,AHKuI,EAAE,CGLzI,AHK0I,EAAE,EAAE,EAAE,EAAE,EACnpxvO,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAClhhrrrrttttttN,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,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1IC,AH8C2I,EAAE,CAAC,EG9C9I,AH8CgJ,CAAC,EAAE,CAAC,EACrK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EG/CXC,AH+Ca,CAAC,EAAE,CAAC,EAAE,CG/CnB,AH+CoB,CG/CpBxE,CH+CsB,CAAC,EAAE,CAAC,EAAE,CAAC,CG/C7B,CAAAyE,AH+C+B,CAAC,EAAE,CAAC,EAAE,CG/CrC,AH+CsC,CG/CtC5D,CH+CwC,CAAC,EG/CzC,AH+C2C,CG/C3CX,AH+C4C,EAAE,CAAC,EAAE,CAAC,CG/ClD,CAAA+D,AH+CoD,CAAC,EAAE,CAAC,EAAE,CAAC,EG/C3D,AH+C6D,CG/C7DO,AH+C8D,EAAE,CAAC,EAAE,CAAC,CG/CpE,CH+CsE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EG/CjHE,AH+CmH,CG/CnH,AH+CoH,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChhhhhhhhK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChhlllllK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EACnnK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EACnnppppK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACjxrrM,AFa7B,ACAA,IDAArF,ACAAA,AFgES,KG7EoB+B,CFa7B,ACAA,EFgEiB,CChEjB3C,ACAAA,CFgEkB,EAAE,SG7ES4E,CAAA,IAAAjC,KFa7B,ACAA,CDAA1C,ACAAA,ODAA,ACAA,ECb6B,GAAAiC,MAAA,CAAA4C,cAAA,GAAA5C,MAAA,CAAAgE,cAAA,CAAAvE,IAAA,cAAAgB,gBAAAiC,CAAA,WAAAA,CAAA,CAAAG,SAAA,IAAA7C,MAAA,CAAAgE,cAAA,CAAAtB,CAAA,aAAAjC,eAAA,CAAAiC,CAAA;AAE7B,AFYA,ACAA,ICZI2N,AFYJ1R,ACAAA,AFgES,IG5ED,AH4EK,CChEb,ACAA,CFgEc,CAAC,CChEfb,ACAAA,sBDAA,ACAA,CDAAC,ACAAA,ODAA,ACAA;ACVA,AFWA,ACAA,ICXMkG,AFWNrF,ACAAA,AFgES,MAAM,CChEf,ACAA,CCXc,AH2EE,EChEhBd,ACAAA,CCXiB,KH2EO,gBChExB,ACAA,CDAAC,ACAAA,ODAA,ACAA;ADCA,ACAA,ECXI4O,EFWJ9N,ACAAA,AFgES,KG3EE,CFWX,ACAA,CCXa,EFWbf,ACAAA,AFgEkB,CG3EF,CH2EG,CAAC,mBChEpB,ACAA,CDAAC,ACAAA,ODAA,ACAA;ADAyD,ACAA,ECVrD0N,EH2EK,KCjEgD3N,ACAAA,CFiE1C,EAAC,MG3EI,EAAE,GAAG,AH2EE,SCjE8BgB,ACAAA,GDAA,ACAA,WDAAA,ACAAA,GDAA,ACAA,IDAAA,ACAAA,GDAA,ACAA,CDAAC,ACAAA,UDAA,ACAA,GDAAD,ACAAA,GDAA,ACAA,KDAAE,ACAAA,ODAA,ACAA,EDAAF,ACAAA,GDAA,ACAA;ADAA,ACAA,ECTrD0M,EH2EK,KClEgDvM,ACAAA,IFkEvC,EAAC,EG3EA,AFSsCH,ACAAA,ECTpC,CFSoC,ACAA,AFkEjC,EG3EA,oCFSiCG,ACAAA,ODAA,ACAA,wBDAAC,ACAAA,MDAA,ACAA,uBDAAA,ACAAA,MDAA,ACAA,CDAAC,ACAAA,QDAA,ACAA,aDAAL,ACAAA,GDAA,ACAA,kBDAAA,ACAAA,GDAA,ACAA,gBDAAA,ACAAA,GDAA,ACAA,WDAAA,ACAAA,GDAA,ACAA,yBDAAI,ACAAA,MDAA,ACAA,IDAAJ,ACAAA,GDAA,ACAA,CDAAM,ACAAA,WDAA,ACAA,KDAAF,ACAAA,MDAA,ACAA,IDAAJ,ACAAA,GDAA,ACAA,KDAAI,ACAAA,MDAA,ACAA,CDAAG,ACAAA,SDAA,ACAA,qBDAAP,ACAAA,GDAA,ACAA,KDAAG,ACAAA,ODAA,ACAA,CDAAH,ACAAA,GDAA,ACAA;ADAA,ACAA,ECRrD+N,EH2EK,KCnEgDvN,ACAAA,EFmEzC,EAAC,CG3ED,AFQyC,ACAA,CFmEtC,CG3ED,EAAE,WFQqCC,ACAAA,ODAA,ACAA,oBDAAA,ACAAA,ODAA,ACAA,CDAAC,ACAAA,GDAA,ACAA,IDAAF,ACAAA,IDAA,ACAA,GDAAC,ACAAA,ODAA,ACAA,CDAAC,ACAAA,GDAA,ACAA,CDAAC,ACAAA,IDAA,ACAA,aDAAH,ACAAA,IDAA,ACAA,YDAAA,ACAAA,KDAAI,ACAAA,MDAA,ACAA,EDAAC,ACAAA,QDAA,ACAA,EDAAC,ACAAA,QDAA,ACAA,QDAAC,ACAAA,IDAA,ACAA,GDAAC,ACAAA,cDAA,ACAA,CDAAJ,ACAAA,MDAA,ACAA,EDAAC,ACAAA,QDAA,ACAA,QDAAE,ACAAA,IDAA,ACAA,cDAAE,ACAAA,IDAA,ACAA,GDAAC,ACAAA,MDAA,ACAA,CDAAC,ACAAA,wBDAA,ACAA,CDAAJ,ACAAA,IDAA,ACAA,EDAAF,ACAAA,QDAA,ACAA,ODAAI,ACAAA,IDAA,ACAA,CDAAP,ACAAA,GDAA,ACAA,WDAAO,ACAAA,IDAA,ACAA,CDAAP,ACAAA,GDAA,ACAA,CDAAU,ACAAA,IDAA,ACAA,CDAAC,ACAAA,SDAA,ACAA,CDAAC,ACAAA,MDAA,ACAA,ODAAV,ACAAA,MDAA,ACAA,GDAAE,ACAAA,QDAA,ACAA,YDAAG,ACAAA,IDAA,ACAA,CDAAM,ACAAA,KDAA,ACAA,cDAAf,ACAAA,IDAA,ACAA,CDAAgB,ACAAA,KDAA,ACAA,ODAAH,ACAAA,SDAA,ACAA;ADAA,ACAA,ECPrD2M,EH2EK,GAAG,ECpE6ChN,ACAAA,AFoE5C,CAAC,IG3EE,EAAE,EAAE,MFOqCS,ACAAA,MDAA,ACAA,EDAAZ,ACAAA,QDAA,ACAA,YDAAK,ACAAA,MDAA,ACAA,CDAAX,ACAAA,SDAA,ACAA,CDAAmB,ACAAA,cDAA,ACAA,CDAAN,ACAAA,IDAA,ACAA,CDAAK,ACAAA,MDAA,ACAA,EDAAZ,ACAAA,QDAA,ACAA,KDAAY,ACAAA,MDAA,ACAA,GDAAE,ACAAA,eDAA,ACAA,CDAAF,ACAAA,MDAA,ACAA,ODAAA,ACAAA,MDAA,ACAA,2BDAAA,ACAAA,MDAA,ACAA;ADAA,ACAA,ECNrDuL,EH2EK,GAAG,ECrE6CpL,ACAAA,AFqE5C,OG3EK,EAAE,EAAE,KFMmCC,ACAAA,QDAA,ACAA,EDAAC,ACAAA,WDAA,ACAA,UDAAD,ACAAA,QDAA,ACAA,YDAAC,ACAAA,WDAA,ACAA,eDAAC,ACAAA,SDAA,ACAA;ADAA,ACAA,ECLrDmL,AH2EI,CAAC,CAAC,KCtE+ClL,ACAAA,YCLlC,EAAE,EAAE,EFK8BpB,ACAAA,MDAA,ACAA,EDAAqB,ACAAA,KDAA,ACAA,aDAAC,ACAAA,CDAA,ACAA,MDAAA,ACAAA,CDAA,ACAA,GDAAD,ACAAA,KDAA,ACAA,CDAAX,ACAAA,MDAA,ACAA,EDAAY,ACAAA,CDAA,ACAA,UDAAC,ACAAA,UDAA,ACAA,GDAAF,ACAAA,KDAA,ACAA,CDAAC,ACAAA,CDAA,ACAA,GDAAC,ACAAA,UDAA,ACAA,CDAAC,ACAAA,UDAA,ACAA,GDAAD,ACAAA,UDAA,ACAA,CDAAC,ACAAA,UDAA,ACAA,WDAAD,ACAAA,UDAA,ACAA,CDAAE,ACAAA,YDAA,ACAA,wBDAAF,ACAAA,UDAA,ACAA,EDAAA,ACAAA,UDAA,ACAA,CDAAG,ACAAA,QDAA,ACAA,SDAApB,ACAAA,MDAA,ACAA,CDAAqB,ACAAA,cDAA,ACAA,CDAA3B,ACAAA,MDAA,ACAA,EDAA4B,ACAAA,cDAA,ACAA,CDAAL,ACAAA,UDAA,ACAA,CDAAM,ACAAA,GDAA,ACAA,GDAAN,ACAAA,UDAA,ACAA;ADAA,ACAA,ECJrD4K,AH2EH,OCvEwDrK,ACAAA,MFuE3C,EAAC,CAAC,EG3EM,EAAE,AFIiCZ,ACAAA,ECJ/B,SFI+B,ACAA,EDAAa,ACAAA,UDAA,ACAA,EDAAC,ACAAA,WDAA,ACAA,QDAAD,ACAAA,UDAA,ACAA,EDAAX,ACAAA,iBDAA,ACAA,CDAAF,ACAAA,WDAA,ACAA,CDAAvB,ACAAA,SDAA,ACAA,EDAAoC,ACAAA,UDAA,ACAA,ODAAC,ACAAA,WDAA,ACAA,EDAAZ,ACAAA,iBDAA,ACAA,CDAAF,ACAAA,WDAA,ACAA,EDAAc,ACAAA,WDAA,ACAA,GDAA1B,ACAAA,MDAA,ACAA,CDAAqB,ACAAA,cDAA,ACAA,CDAAT,ACAAA,WDAA,ACAA,iBDAAQ,ACAAA,QDAA,ACAA,mBDAAR,ACAAA,WDAA,ACAA;ADAA,ACAA,ECHrD8N,AH2EH,OCxEwDpN,ACAAA,OFwE1C,CG3EI,CH2EH,CG3EK,AH2EJ,GG3EO,EFGiCK,ACAAA,GDAA,ACAA,QDAAJ,ACAAA,GDAA,ACAA,GDAAK,ACAAA,YDAA,ACAA,CDAAD,ACAAA,GDAA,ACAA,oBDAA1C,ACAAA,ODAA,ACAA,CDAAsC,ACAAA,GDAA,ACAA,iBDAAA,ACAAA,GDAA,ACAA,GDAAM,ACAAA,MDAA,ACAA,CDAAN,ACAAA,GDAA,ACAA;ADAA,ACAA,ECFrD+O,AH2EH,OCzEwD1O,ACAAA,MFyE3C,CG3EI,CH2EH,CG3EK,GAAG,CFEkCE,ACAAA,KDAA,ACAA,EDAAC,ACAAA,AFyE9B,ICzE8B,ACAA,QDAA9C,ACAAA,ODAA,ACAA,CDAA6C,ACAAA,KDAA,ACAA,kBDAAA,ACAAA,KDAA,ACAA,kBDAAA,ACAAA,KDAA,ACAA,MDAAE,ACAAA,IDAA,ACAA,GDAAF,ACAAA,KDAA,ACAA,CDAA5C,ACAAA,MDAA,ACAA,CDAA+C,ACAAA,WDAA,ACAA,ODAAD,ACAAA,IDAA,ACAA,KDAAE,ACAAA,SDAA,ACAA,QDAAC,ACAAA,GDAA,ACAA,GDAAH,ACAAA,IDAA,ACAA,CDAA9B,ACAAA,IDAA,ACAA,CDAA4B,ACAAA,KDAA,ACAA,EDAAC,ACAAA,IDAA,ACAA,oBDAA9C,ACAAA,ODAA,ACAA,CDAAkD,ACAAA,GDAA,ACAA,uBDAAA,ACAAA,GDAA,ACAA,YDAAtB,ACAAA,SDAA,ACAA,4DDAAkB,ACAAA,IDAA,ACAA,gBDAAF,ACAAA,MDAA,ACAA,GDAAO,ACAAA,MDAA,ACAA,EDAAN,ACAAA,KDAA,ACAA;ADAA,ACAA,ECDrDmL,AH2EH,OC1EwD5K,ACAAA,ICD1C,EAAE,AH2EH,EG3EK,AH2EJ,EC1E0CC,ACAAA,QDAA,ACAA,EDAAC,ACAAA,AF0E9B,UC1E8B,ACAA,eDAAA,ACAAA,UDAA,ACAA,mBDAAA,ACAAA,UDAA,ACAA,uBDAA1B,ACAAA,SDAA,ACAA,0DDAAyB,ACAAA,QDAA,ACAA,CDAAjD,ACAAA,SDAA,ACAA,GDAAW,ACAAA,MDAA,ACAA,CDAAwC,ACAAA,MDAA,ACAA,CDAAD,ACAAA,UDAA,ACAA,IDAAA,ACAAA,UDAA,ACAA,CDAAlD,ACAAA,SDAA,ACAA,IDAAD,ACAAA,WDAA,ACAA,IDAAiB,ACAAA,KDAA,ACAA,EDAAiC,ACAAA,QDAA,ACAA,EDAAlB,ACAAA,QDAA,ACAA,QDAAD,ACAAA,YDAA,ACAA,aDAAnB,ACAAA,MDAA,ACAA,CDAAqB,ACAAA,cDAA,ACAA,CDAAiB,ACAAA,QDAA,ACAA,iBDAAlB,ACAAA,QDAA,ACAA,gBDAAmB,ACAAA,UDAA,ACAA,EDAAE,ACAAA,eDAA,ACAA,CDAAH,ACAAA,QDAA,ACAA,EDAAC,ACAAA,UDAA,ACAA;ADAA,ACAA,ECArD2K,AH2EH,OC3EwDzK,ACAAA,ICA1C,EAAE,CH2EF,CG3EI,CH2EH,OC3EyCC,ACAAA,CDAA,ACAA,AF2EjC,EC3EiCC,ACAAA,CDAA,ACAA,IDAAF,ACAAA,eDAA,ACAA,GDAAzC,ACAAA,MDAA,ACAA,CDAA4C,ACAAA,cDAA,ACAA,GDAA5C,ACAAA,MDAA,ACAA,CDAA4C,ACAAA,cDAA,ACAA,CDAAnD,ACAAA,IDAA,ACAA,cDAAgD,ACAAA,gBDAAC,ACAAA,CDAA,ACAA,EDAAC,ACAAA,CDAA,ACAA,IDAAD,ACAAA,CDAA,ACAA,CDAAG,ACAAA,SDAA,ACAA,GDAAF,ACAAA,CDAA,ACAA,SDAAD,ACAAA,CDAA,ACAA,YDAAD,ACAAA,eDAA,ACAA,CDAAC,ACAAA,CDAA,ACAA,EDAAC,ACAAA,CDAA,ACAA;ADAA,ACAA,ECCrDyK,AH2EH,OC5EwDtK,ACAAA,KF4E5C,CG3EI,CH2EH,CG3EK,CH2EH,CG3EK,GFDoCC,ACAAA,ODAA,ACAA,QDAAC,ACAAA,yBDAA,ACAA,GDAAC,ACAAA,yBDAA,ACAA,oBDAAC,ACAAA,qBDAA,ACAA,QDAAC,ACAAA,KDAA,ACAA,GDAA1C,ACAAA,eDAA,ACAA,CDAAsC,ACAAA,ODAA,ACAA,GDAAK,ACAAA,MDAA,ACAA,MDAAJ,ACAAA,yBDAA,ACAA,QDAAK,ACAAA,SDAA,ACAA,GDAA5C,ACAAA,eDAA,ACAA,ODAArB,ACAAA,WDAA,ACAA,EDAAgE,ACAAA,MDAA,ACAA,GDAA7D,ACAAA,ODAA,ACAA,CDAA+D,ACAAA,SDAA,ACAA,CDAAH,ACAAA,KDAA,ACAA,EDAAhD,ACAAA,SDAA,ACAA,EDAAkD,ACAAA,SDAA,ACAA,YDAAD,ACAAA,MDAA,ACAA,GDAAD,ACAAA,KDAA,ACAA,CDAA7C,ACAAA,KDAA,ACAA,ODAAH,ACAAA,SDAA,ACAA,YDAAoD,ACAAA,0BDAA,ACAA,ODAAH,ACAAA,MDAA,ACAA;ADAA,ACAA,ECErD+J,AH2EH,OC7EwD5J,ACAAA,GF6E9C,EAAC,CACJ,KG5Ec,EAAE,EAAE,YFF+BC,ACAAA,IDAA,ACAA,EDAAtD,ACAAA,IDAA,ACAA,QDAAA,ACAAA,IDAA,ACAA,KDAAjB,ACAAA,ODAA,ACAA,CDAAiB,ACAAA,IDAA,ACAA,yBDAAA,ACAAA,IDAA,ACAA,2BDAAA,ACAAA,IDAA,ACAA,aDAAA,ACAAA,IDAA,ACAA,yBDAAW,ACAAA,SDAA,ACAA,uEDAA4C,ACAAA,sBDAA,ACAA,CDAAD,ACAAA,IDAA,ACAA;ADAA,ACAA,ECGrD6K,EH4EK,KC/EgD5K,ACAAA,IF+EvC,EAAC,CAAC,GG5EC,EAAE,EAAE,SFHgCD,ACAAA,IDAA,ACAA,QDAAA,ACAAA,IDAA,ACAA,yBDAAE,ACAAA,cDAA,ACAA,wEDAAF,ACAAA,IDAA,ACAA;ADAA,ACAA,ECIrD8L,EH4EK,KChFgDrM,ACAAA,ICI1C,CH4EI,CG5EF,CH4EG,CAAC,CG5ED,iBFJqC,ACAA,eDAA1D,ACAAA,ODAA,ACAA,qBDAAA,ACAAA,ODAA,ACAA,CDAA+D,ACAAA,SDAA,ACAA,oBDAA/D,ACAAA,ODAA,ACAA,CDAA+D,ACAAA,SDAA,ACAA,CDAAK,ACAAA,IDAA,ACAA,2BDAAC,ACAAA,KDAA,ACAA,oCDAAC,ACAAA,ODAA,ACAA,CDAAxE,ACAAA,SDAA,ACAA,CDAAyE,ACAAA,ODAA,ACAA,CDAA5D,ACAAA,IDAA,ACAA,CDAAX,ACAAA,ODAA,ACAA,CDAA+D,ACAAA,SDAA,ACAA,CDAAO,ACAAA,ODAA,ACAA,8CDAAE,ACAAA,CDAA,ACAA;ADAA,ACAA,ECKrDmH,EH4EK,KCjFgDzK,ACAAA,EFiFzC,EG5ED,AH4EE,EG5EA,UFLwCiC,ACAAA,CDAA,ACAA,IDAAjC,ACAAA,OFiFhB,QCjFgB,ACAA,GDAAT,ACAAA,MDAA,ACAA,CDAA4C,ACAAA,cDAA,ACAA,GDAA5C,ACAAA,MDAA,ACAA,CDAAgE,ACAAA,cDAA,ACAA,CDAAvE,ACAAA,IDAA,ACAA,cDAAgB,ACAAA,gBDAAiC,ACAAA,CDAA,ACAA,WDAAA,ACAAA,CDAA,ACAA,CDAAG,ACAAA,SDAA,ACAA,IDAA7C,ACAAA,MDAA,ACAA,CDAAgE,ACAAA,cDAA,ACAA,CDAAtB,ACAAA,CDAA,ACAA,aDAAjC,ACAAA,eDAA,ACAA,CDAAiC,ACAAA,CDAA,ACAA;ACMzD,AFJA,ACAA,CCIC,GFJGuB,ACAAA,AFgFK,QChFG,ACAA,KFgFU,EAAC,GAAG;AG1E1BsM,AFLA,ACAA,IDAIrM,ACAAA,AFgFK,EG3EH,CAACsM,GFLG,ACAA,GCKG,GAAG,AH2EK,EAAC,GAAG,OG3EH;AFLX,ACAA,ECMP,EFJiBrM,ACAAsL,AF+EZ,EG3EDgB,IFJmB,ACAA,EF+EV,EAAC,CAAC,CG3ED,GAAG,iBFJMrM,ACAAA,aDAA,ACAA;EDAA/B,ACAAA,ECKnBqO,AH2EC,IG3EG,EAAErH,AH2EC,CChFY,ACAA,CDAAlF,ACAAsL,AFgFX,IG3EI,CAACkB,CFLM,ACAA,CFgFJ,CChFIvM,ACAAA,CCKF,YFLE,ACAA;EDAA,ACAA,ECMnBwM,AH2EC,ECjFkBvM,ACAAA,GCMd,EAAE,CFNY,ACAA,CFiFT,ECjFSvB,ACAAA,AFiFR,CAAC,WCjFO,ACAA,CDAAqB,ACAAsL,MDAA,ACAA;EDCvB,ACAA,EFiFK,EG3EGoB,IAAI,CFNZ1M,ACAAsL,CCMcpG,GH2EE,EAAC,CG3EG,AFNpB,ACAA,CCMqByH,AH2EF,CCjFL,ACAA,ICMY,CAACC,GAAG;IFNhBrQ,ACAAA,AFkFT,EG3EGsQ,UAAU,AH2ED,EG3EG3H,AH2EF,CClFJ,ACAA,CFkFM,IG3EM,CAACyH,CFPb3M,ACAAsL,ICOkB,CAACwB,CFPnB,ACAA,UCO8B;IFP9B,ACAA,AFmFT,EG3EGzK,KAAK,AFRCnC,ACAAA,ECQC,EH2EC,EG3EG,AFRL,ACAA,AFmFG,CCnFHnE,ACAAA,IDAA,ACAA,ODCJ,ACAA,QDAQ,ACAA;EDClB,ACAA,AFkFI,CAAC,CAAC,EG3EEuG,MAAM,EAAE;EFPfjF,ACAAA,AFmFJ,EG3EO,CAAC,QH2EG,CCnFP,ACAA,CDAA2C,ACAAsL,AFmFQ,EAAE,ICnFV,ACAA;EFoFJ,EG3EOyB,AFTH3P,ACAAA,GDAA,ACAA,CFoFE,EAAC,EG3EQ,EAAE,CH2EL,GG3ES;EH4ErB,EG3EO4P,AFVH9Q,ACAAA,KDAA,ACAA,EDED,ACAA,AFmFM,EAAC,MG3EY,AH2EN,CCnFbiE,ACAAA,CCQqB,OFRrB,ACAA,ECQ8B,AFRpB,ACAA;EFoFb,EG3EO+B,EFRA,ACAA,GFmFA,CCnFI,ACAA,CCQG,AFRF9B,ACAAA,AFmFJ,EG3EQ,EFRA,ACAA,CDACC,ACAAA,KDAK,ACAA,CDAC,ACAA,aDAa,ACAA,EDAEC,ACAAA,SDAc,ACAA,CDAC,ACAA;AFoFtD,CAAC,KG3EWzF,AFRJ,ACAA,IDAI,ACAA,CDAC0F,ACAAH,ECQM,AFRJ,EEQM,ADRJ,CDAC,ACAAC,IDAI,CAACD,ACAA,CAAC,CCQK,EFRF,CAACC,KAAK,CAAC,GCAG,EAAEkL,QDAQ,EAAE/K,ACAI,CAAC,SDAS,CAAC;MESpDyM,AFRJ,ACAA,IDAI,ACAA,CDAC7M,ACAAA,CCQK,EAAE,CFRH,ACAA,CDACC,ACAAA,KDAK,ACAA,CDAC,ACAA,YDAY,ACAA,EDAEI,ACAAA,gBDAa,ACAA,CDAC,ACAA;MDC5C,ACAA,ECQQyM,EFRJ,ACAA,CDAC9M,ACAAA,ECQQ,EAAE,AFRN,ACAA,CDACC,ACAAA,GCQS,EFRJ,ACAA,CDAC,ACAA,QDAQ,ACAA,EDAEK,ACAAA,eDAS,ACAA,CDAC,ACAA;MDCpC,ACAA,ECQQ8H,EFRJ,ACAA,CDACpI,ACAAA,ICQU,AFRN,ACAA,CDACO,ACAAA,CCQO,eFRS,ACAA,CDAC,ACAA,KDAK,ACAA,EDAEC,ACAAA,YDAM,ACAA,CDAC,ACAA;MDEzC,ACAA,ICOY4E,AFPN3E,ACAAA,CCOO,EAAE,QFPE,ACAA,GDAG,ACAA;QCQZ,AFRaC,ACAAA,UDAU,ACAA,EDAE,ACAA,GDAG,ACAA;MCShC,EFTkCC,ACAAA,WDAW,ACAA,EDAE,ACAA;ICUnD,CAAC,CFVqD,ACAA,CDAC,ACAA;ICWvDiG,EFVA,ACAA,GCUK,CFVChG,ACAAA,CCUC,CAACmM,QFVQ,ACAA,ECUE,CFVC,ACAA,CCUCnN,cAAM,EAAEsL,eAAM;EACtC,CAAC,KFXuBxK,ACAAA,UDAU,ACAA,EDAE,ACAA,EDAE,ACAA;ECYtCoL,IAAI,EFZoCnL,ACAAA,CCYjC,IAAImE,MAAM,AFZkC,ACAA,CCYjCkI,CFZmC,ACAA,GCY/B,CAACd,UAAU,CAAC;EAClCF,IFbuD,ACAA,CDAC,ACAA,CCalD,CAACiB,KAAK,CAAC,CAAC;AAClB,CAAC,KFZO,ACAA,IDAI,ACAA,CDACjN,ACAAA,IDAI,ACAA,CDACa,ACAAA,WDAW,ACAA,CDAC,ACAA,kBDAkB,ACAA,EDAEC,ACAAA,aDAc,ACAA,EDAEL,ACAAA,WDAW,ACAA,CDAC,ACAA;ACY7E,IAEKsM,EFbE,ACAA,IDAI,ACAA,CDAC/M,ACAAA,GCaG,CFbC,ACAA,CDACa,ACAAA,WDAW,ACAA,CDAC,ACAA,YCadhB,MFbgC,ACAA,EDAEkB,ACAAA,KCalC,QFbgD,ACAA,EDAEN,ACAAA,WDAW,ACAA,CDAC,ACAA;ECa9D3C,IFZR,ACAA,IDAI,ACAA,CCYI,AFZHkC,ACAAA,CCYG+M,GFZC,ACAA,CDAClM,ACAAA,MCYF,EAAAhB,GFZa,ACAA,CDAC,ACAA,SCYd,QFZ+B,ACAA,EDAEmB,ACAAA,YDAa,ACAA,EDAEP,ACAAA,WDAW,ACAA,CDAC,ACAA;ECY5D,IAAAX,AFXR,ACAA,IDAI,ACAA,CDACE,ACAAA,CCWG,GAAAzB,AFXC,ACAA,CDACsC,ACAAA,WCWF,AFXa,ACAA,CCWbkM,AFXc,ACAA,UCWd,UFXkC,ACAA,EDAE9L,ACAAA,aDAc,ACAA,EDAER,ACAAA,WDAW,ACAA,CDAC,ACAA;ECY5E,IFXI,ACAA,IDAI,ACAA,CCWRsM,AFXS/M,ACAAA,IDAI,ACAA,CDACa,ACAAA,MCWd,EAAe,GFXU,ACAA,CDAC,ACAA,kBDAkB,ACAA,EDAEK,ACAAA,aDAc,ACAA,EDAET,ACAAA,WDAW,ACAA,CDAC,ACAA;ICW3DtE,EFTX,ACAA,IDAI,ACAA,CDAC6D,ACAAA,IDAI,ACAA,CDACa,ACAAA,GCSC,OAAAkM,CFTU,ACAA,CDAC,ACAA,QCSX,SFT4B,ACAA,EDAE5L,ACAAA,cDAa,ACAA,EDAEP,ACAAA,UDAU,ACAA,CDAC,ACAA;ICSxD,EFRX,ACAA,IDAI,ACAA,CCQOd,AFRNE,ACAAA,IDAI,ACAA,CDACa,ACAAA,CCQC,CAAAlF,IAAA,KFRU,ACAA,CDAC,ACAA,CCShB,YAAY,IFTqB,ACAA,EDAEyF,ACAAA,cDAa,ACAA,EDAER,ACAAA,UDAU,ACAA,CDAC,ACAA;ECUvE,IFTI,ACAA,IDAI,ACAA,CDACZ,ACAAA,IDAI,ACAA,CDACa,ACAAA,WDAW,ACAA,CDAC,ACAA,gBDAgB,ACAA,EDAEQ,ACAAA,aDAY,ACAA,EDAET,ACAAA,UDAU,ACAA,CDAC,ACAA;ECSpE3D,IFRG,ACAA,IDAI,ACAA,CDAC+C,ACAAA,GCQR,CAAA+M,AFRY,ACAA,CDAClM,ACAAA,SCQb,EFRwB,ACAA,CDAC,ACAA,mBDAmB,ACAA,EDAES,ACAAA,eDAe,ACAA,EDAEV,ACAAA,UDAU,ACAA,CDAC,ACAA;ICQ1E5D,EFPG,ACAA,CCOH,GFPO,ACAA,CDACgD,ACAAA,IDAI,ACAA,CDACa,ACAAA,WDAW,ACAA,CDAC,ACAA,iBDAiB,ACAA,EDAEU,ACAAA,cDAa,ACAA,EDAEX,ACAAA,UDAU,ACAA,CDAC,ACAA;ICOtE9E,AFND,ACAA,KCMC,EAED,SAAAmC,OAAA,EAAS;EFRR,ACAA,ICSG,IAAI,CAACuD,IAAI,GAAG;IFTfxE,ACAAA,GDAA,ACAA,CCUO2C,MAAM,EAAEmM,IAAI,CAACnM,MAAM;IFV1B7D,ACAAA,ICWO4D,CFXP,ACAA,EDED,ACAA,KCSgB,EAAEA,EFTlBzB,ACAAA,ODAOuD,ACAAA,IDAI,ACAA,EDAE,ACAA;MCUT,AFVS,ACAA,CCUR,GFVQC,ACAAA,KDAA,ACAA;MCWT,AFVA9B,ACAAA,ICUI,CAACiH,CFVC,ACAA,GDAGpF,ACAAA,CCUC,CAACqF,EFVE,ACAA,CDAClH,ACAAA,ECUE,CAAC,GFVG,ACAA,KCUK,EAAE,IAAI,CAAC6B,IAAI,CAAC;IACzC,EFVI9B,ACAAA,QDAQ,ACAA,GDAG8B,ACAAA,IDAI,ACAA,CDAC9B,ACAAA,QDAQ,ACAA;ECU3B,IFRGgC,ACDA,IAAME,GDCC,CAACD,GAAG,ACDE,CDCD,ECDI,GAAG,GAAC,CDCC,ACDA,CDCC;EEQzB,IFPG,ACDA,GCQHoL,CFPSnL,ACDAC,ODCO,CCDC,CCQjB,CFPmB,CCDC,CAAC,CDCC,ACDA,GDCC,CAAC;AEOxB,EAXoBiD,IFKjB,ACAA,ECLuB,CAACsE,CFKlBvH,ACAF,CAACC,GCLwB,IFKf,ACAF,CAACC,EDAI,GAAG,ACAF,CAACC,EDAE,CAAC,GAAG,EAAE,CCAC,CAAC,CAAC,EAAE,CAAC,EAAErC,MAAM,CAACsC,KAAK,EAAEtC,MAAM,CAACuC,MAAM,CAAC;MDE/D,ACDA,IDCI,ACDA,CDCCJ,ACDAA,ODCO,ACDA,CDCCC,ACDAA,KDCK,ACDA,CDCCC,ACDAG,SDCS,CAAC,CAAC,EAAE,CAAC,EAAExC,ECDE,CAAC,GDCG,CAACsC,ACDA,EAAE,GDCG,CCDC,CDCCtC,CCDC,KDCK,ACDA,CDCCuC,CCDC,KDCK,ACDA,CDCC,ACDA;MDE/D,ACAA,IDAI,ACAA,CDACJ,ACAAM,GAAG,CAACnC,GDAG,CAAC8B,CCAC,CAACpC,GDAG,CAACwC,ECAE,CAACF,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CDAC,CAAC,ACAA,IDAI,EAAE,IAAI,EAAE,CCAC,CAAC,CAACI,EDAE,EAAE,ICAI,CDAC,ACAA,CDAC,ECAE,CAAC;MDElE,ACAA,IDAI,ACAA,CDACD,ACAAA,GDAG,ACAA,CDACnC,ACAAA,KDAK,ACAA,CDACN,ACAAiC,MDAM,CAACK,ACAA,GAAG,EDAE,CCAC,EDAE,ACAAJ,CDAC,EAC/BlC,KCDsC,CDChC,CAACuC,ACDiC,MDC3B,GAAG,CAAC,EAAE,CCDkC,CAAC,CAACG,QAAQ,CAAC,CDChC,ACDiC,CDChC,ACDiC,CDChCA,QAAQ,CAAC,GAAG,CAAC;MAE/C,ACFA,IDEI,ACFA,CDECD,ACFAA,GDEG,ACFA,CDECnC,ACFAA,KDEK,ACFA,CDEC2B,ACFA,CAAC,GAAG,GDEG,ACFA,EDEEC,ACFAA,QDEQ,ACFA,EDEE,ACFA,aDEa,ACFA,CDEC,ACFA,CDECQ,ACFAA,QDEQ,ACFA,CDEC,ACFA,CDEC,ACFA,CDEC,ACFA;MDG5D,ACDA,IDCI,ACDA,CDCCD,ACDAE,GDCG,ACDA,CDCCrC,ECDE,GDCG,CAAC,ACDA,CDCC,ACDAsC,EDCEV,ECDE,CAACW,KDCK,EAAE,ACDA,CAAC,YDCY,CAAC,CAACH,QAAQ,CAAC,CAAC,CAAC;MAEtD,ECH8BrF,EDG1B,CAACsF,ACH4B,EAAE,CDG3B,GAAG,CCH6B,GDGzB,CAACC,IAAI,CAACC,OAAO,CAAC;QAACxF,ACHYyF,GDGT,EAAE,ICHgB,CDGX,CCHa,EAAE;QDGbA,ACHeC,SDGN,CCHgB,CDGd,CCHgB,CDGd;MCHgB,CAAC,CDGfA,ACHgB,UDGN,EAAE;MAAE,ACFvE,CDEwE,CAAC,ECFrE,CAACC,OAAO,GAAG,IAAI,CAACL,GAAG,CAACM,eAAe,CAAC,OAAO,EAAE,YAAY,CAAC;MDG9D,ACFA,IDEI,ACFA,CDECD,ACFAE,KAAK,EDEE,CCFC,EDEE,ECFE,CAACP,CDEC,CAACA,CCFC,CAACQ,CDEC,CAACF,SCFS,CAAC,KDEK,CAAC,ECFE,EAAE,GDEG,EAAE,ECFE,EAAE,CAAC,EAAE,CAAC,CAAC,GDEG,CAAC;MAC9D,ACFA,IDEI,ACFA,CDECC,ACFAA,KDEK,ACFA,CAACE,EDEE,IAAI,CAACT,GAAG,CAACQ,QCFQ,CAAC,CAAC,CDEC,CAAC,ACFA,EAAE,CAAC,KDEK,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;MAC1D,ACDA,IDCI,ACDA,CDCCD,ACDAM,KDCK,CAACJ,CCDC,GAAG,IAAI,CAACK,UDCU,CAAC,CAAC,CCDC,CDCC,ACDA,CAAC,CDCC,CAAC,ACDA,EAAE,CAAC;MDExC,ACAA,IDAI,ACAA,CDAChB,ACAAiB,GDAG,CAACL,GCAG,CDAC,CAAC,CCAC,CDAC,EAAE,CCAC,CAAClB,CDAC,EACrB,ICD2B,CAACM,GAAG,CAACkB,KAAK,CAAC,qEDC8C,EACpF;QAAEL,ACDEM,QDCM,CCDG,CDCD,CCDGC,CDCD,KCDO;QDCLN,ACAZO,KDAiB,EAAE,OCAL,EAAE;MDAY,ACChC,CDDiC,ACChC,CDDiC,ACChC;MDCF,ACCA,IDDI,ACCA,CDDCN,ACCAO,ODDO,ACCA,GDDG,ACCA,IDDI,ACCA,CDDCN,ACCAtB,OAAO,CAACM,GAAG,CAACkB,CDDC,CAAC,CAAC,EAAE,ACCA,CAAC,CDDC,CAAC;MAExC,ECAIC,EDAA,CAACF,MCAQ,CDAD,CCAGM,EDAA,IAAI,ACAE,CDAD7B,OAAO,CAACM,GAAG,CAACkB,KAAK,CAAC;QAClCC,ACAAE,SDAS,EAAED,GCAG,EAAE,CDAC;MCCrB,CAAC,CDAGC,ACAF,cDAgB,EAAE;MACpB,ACCA,CDDC,CAAC,ECCE,CAAC3B,OAAO,CAACM,GAAG,CAACwB,OAAO,CACpB,IAAI,CAACP,OAAO,EACZ,IAAI,CAACR,KAAK,EACV,UAACgB,MAAM,EAAEC,IAAI,EAAK;MDFtB,ECGQD,EDHJ,CAACH,GCGS,CAACK,GDHH,GAAG,CCGO,CAAC,CAAC,CDHL,CAACjC,OAAO,CAACM,GAAG,CAACkB,KAAK,CAAC;MCIlC,CAAC,CDHDC,CCIA,QDJS,EAAEI,ACIVE,MDJgB,ACIV,EAAEC,IAAI,EAAK;QDHlBL,ACIE,OAAOK,IAAI,CAACE,EDJA,EAAE,ICIM;MDH1B,ACII,CDJH,ACKD,CDLE,ACKD;MDHD,ACKA,IDLI,ACKA,CDLClC,ACKAA,ODLO,ACKA,CDLCM,ACKAA,GDLG,ACKA,CDLCwB,ACKAA,ODLO,ACKA,CDJpB,ACKA,IDLI,ACKA,CDLCP,ACKAA,ODLO,ACKA,EDJZ,ACKA,IDLI,ACKA,CDLCR,ACKAa,KDLK,EACV,ACIY,EACZ,QDLCG,ECKAA,IDLM,EAAEC,ACKF,EAAEG,EDLI,EAAK,ECKH,EAAK;QDJhBJ,ACKA,IAAI,CAACpC,CDLC,CAACsC,GCKE,CAACF,GDLI,CAAC,CAAC,CCKA,CAACK,SAAS,EAAE;MDJhC,CAAC,EACD,CCIQzC,KAAI,CAACoC,GDJZA,GCIkB,CAACK,EDJb,EAAEJ,IAAI,CCIgB,CDJX,ECIc,IAAI;QDHlC,ECIMD,KDJCC,CCIK,CAACC,EDJF,CAACC,ICIQ,CAAC,CAAC,EDJF;MACtB,CACJ,CAAC,ECGWC,MAAM,CAACE,GAAG,CAAC,CAAC;MDDxB,IAAI,ACEQ1C,CDFPK,ICEW,CAAC4B,EDFL,CAACtB,GAAG,CAACwB,ACEO,CAACQ,MDFD,ACEO,CDD3B,ACC4BH,IDDxB,CAACZ,CCC6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AAI,CAACnE,IDVI,CCUC,CAACoE,oBAAoB,CAAC,kBAAkB,EAAE;QDT5DD,ECS6DjC,IDTvD,CCS4D,CDT1D,CCS4D,CAAC,EDTzD,CAAClC,KAAK,CAACoE,oBAAoB,CAAC,iBAAiB,EAAE;UAAClC,ACSWmC,GAAG,EDTT,ACSY,EDTV,CAAC;QCSU,CAAC,CDTTA,ACSU,GDTP,EAAG;QAAC,ACU7EC,CDV8E,CAAC,OCUtE,EAAE,CAAC;QDTZA,ACUAC,MAAM,EAAE,CDVC,ACUA,EDVE,EAAE;MCWjB,CAAC,CDVGA,ACUF,MDVQ,EAAE,CAAC;MACb,ACUA,CDVC,CAAC,ECUE,CAACvE,KAAK,CAAC1G,MAAM,CAAC;MDTlB,ECUIjB,EDVA,CAAC2H,ACUE,EAAE,GDVC,CAAC1G,MAAM,CAAC,ECUI;QDTlBjB,ACUA8L,GDVG,EAAE,CCUC,EAAE,IAAI,CAACnE,KDVK,ACUA,CAACoE,oBAAoB,CAAC,kBAAkB,EAAE;QDT5DD,ECS6DjC,IDTvD,CCS4D,CDT1D,CAAC,ACS2D,CAAC;UDT3D7J,ACS6DgM,GDT1D,ACS6D,EDT3D,ACS8D,iBDT7C;QCS8C,CAAC,CDT7CG,ACS8C,KDTzC,EAAE;QAAC,ACU1CF,CDV2C,CAAC,OCUnC,EAAE,CAAC;QDTZA,ACUAC,MAAM,EAAE,CDVC,ACUA,EDVE;MACf,ACUA,CDVC,ACUA,CDVC,ACUA;MDTF,ACUA,IDVI,ACUA,CDVCvE,ACUAA,KDVK,ACUA,CDVC1G,ACUAA,MDVM,ACUA,CDVC,ACUA;QDTdjB,ACUAA,GDVG,ACUA,EDVE,ACUA,YAAY,CDVC;QAClB8L,ACUAA,MDVM,ACUA,EDVE,ACUA,CDVC,GCUG,CAACnE,KAAK,CAACoE,oBAAoB,CAAC,iBAAiB,EAAE;UDVjD/L,ACUkD6J,GDV/C,EAAE,ACUkD,EAAE,CAAC,cDVpC;UAAEsC,ACUoCH,GAAG,EDVlC,ACUqC,EDVnC;QAAC,ACUmC,CDVlC,ACUmC,CDVlC,ACUmC;QDT/EC,ACUAA,SDVS,ACUA,EDVE,ACUA,EAAE;MDTjB,CAAC,CAAC,ACUEC,MAAM,EAAE,CAAC;MDTb,ACUA,CAAC,CAAC,EDVE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H,ACUE,EAAE,GDVC,CAAC1G,MAAM,CAAC,CCUG;QDTjBjB,ACUA8L,GDVG,EAAE,CCUC,EAAE,IAAI,CAACnE,IDVI,CCUC,CAACoE,oBAAoB,CAAC,iBAAiB,EAAE;QDT3DD,ECS4DjC,IDTtD,CCS2D,CDTzD,CAAC,ACS0D,CAAC;UDT1D7J,ACS4DgM,GDTzD,ACS4D,EDT1D,ACS6D,gBDT7C;QCS8C,CAAC,CDT7CG,ACS8C,KDTzC,EAAE;QAAC,ACUzCF,CDV0C,CAAC,OCUlC,EAAE,CAAC;QDTZA,ACUAC,MAAM,EAAE,CDVC,ACUA,EDVE;MACf,ACUA,CDVC,ACUA,CDVC,ACUA;MDTF,ACUA,IDVI,ACUA,CDVCvE,ACUAA,KDVK,ACUA,CDVC1G,ACUAA,MDVM,ACUA,CDVC,ACUA;QDTdjB,ACUAA,GDVG,ACUA,EDVE,ACUA,WAAW,CDVC;QACjB8L,ACUAA,MDVM,ACUA,EDVE,ACUA,CDVC,GCUG,CAACnE,KAAK,CAACoE,oBAAoB,CAAC,gBAAgB,EAAE;UDVhD/L,ACUiD6J,GDV9C,EAAE,ACUiD,EAAE,CAAC,aDVpC;UAAEsC,ACUoCH,GAAG,EDVlC,ACUqC,EDVnC;QAAC,ACUmC,CDVlC,ACUmC,CDVlC,ACUmC;QDT9EC,ACUAA,SDVS,ACUA,EDVE,ACUA,EAAE;MDTjB,CAAC,CAAC,ACUEC,MAAM,EAAE,CAAC;MDTb,ACUA,CAAC,CAAC,EDVE,CAACvE,KAAK,CAAC1G,MAAM,CAAC;MCWlB,EDVIjB,ECUA,CDVG,ACUF2H,EDVI,GCUC,CAAC1G,MAAM,CAAC,GDVK;QACnB6K,ACUA9L,GAAG,EAAE,CDVC,EAAE,IAAI,CAAC2H,ICUI,CDVC,CAACoE,oBAAoB,CAAC,mBAAmB,EAAE;QCW7DD,EDX8DjC,ICWxD,CDX6D,CCW3D,CDX6D,ACW5D,CDX6D;UAAEmC,ACW9DhM,GDXiE,ACW9D,EDXiE,ACW/D,gBAAgB;QDXgD,CAAC,CAAC,ACWhDmM,KAAK,EAAE;QDVxCF,ACUyC,CAAC,CAAC,ODVlC,EAAE;MACf,CAAC,CAAC,ACUEA,SAAS,EAAE;MDTf,ACUA,CAAC,CAAC,EDVE,CAACtE,KA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","file":"GameFrame.115af833.js","sourceRoot":"..","sourcesContent":["module.exports = { \"compressionlevel\":-1,\r\n \"height\":31,\r\n \"infinite\":false,\r\n \"layers\":[\r\n        {\r\n         \"data\":[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            42, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            2147483658, 42, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            2147483658, 2147483658, 2147483657, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            2147483658, 2147483658, 2147483657, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            2147483666, 2147483666, 2147483665, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 18, 18,\r\n            2147483704, 2147483704, 2147483704, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 56, 56,\r\n            2147483704, 2147483704, 2147483704, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 56, 56,\r\n            2147483704, 2147483704, 2147483704, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 56, 56,\r\n            2147483650, 2147483650, 2147483650, 2, 2, 2, 2, 2, 2, 2, 7, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 0, 0, 0, 25, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\r\n            2147483658, 2147483658, 2147483658, 10, 10, 10, 10, 10, 10, 36, 44, 0, 43, 35, 10, 10, 10, 10, 10, 10, 10, 22, 0, 0, 0, 0, 0, 43, 35, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            2147483658, 2147483658, 2147483658, 10, 10, 10, 10, 10, 36, 44, 0, 0, 0, 43, 35, 10, 10, 10, 10, 10, 10, 13, 23, 0, 0, 29, 0, 0, 43, 35, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            2147483658, 2147483658, 2147483658, 10, 10, 10, 10, 36, 44, 0, 0, 0, 0, 0, 43, 35, 10, 10, 10, 10, 10, 10, 39, 0, 0, 0, 0, 0, 0, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 22, 49, 49, 49, 49, 49, 49, 49, 9, 10, 10, 10, 10, 10, 10, 13, 31, 0, 0, 0, 0, 0, 43, 35, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 23, 55, 55, 55, 55, 55, 55, 55, 21, 10, 10, 10, 10, 10, 10, 10, 10, 23, 0, 0, 0, 0, 0, 43, 18, 18, 18, 18, 6, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 11, 55, 55, 55, 55, 55, 55, 55, 24, 10, 10, 10, 10, 10, 10, 10, 10, 10, 22, 49, 49, 49, 49, 49, 49, 49, 49, 49, 17, 18, 18, 18, 18, 18, 18, 18, 18, 6, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 23, 55, 55, 55, 55, 55, 55, 55, 21, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 30, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 54, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 13, 30, 55, 55, 55, 55, 55, 55, 55, 21, 10, 10, 10, 10, 10, 10, 10, 10, 10, 13, 23, 40, 55, 55, 55, 55, 55, 55, 55, 55, 55, 50, 51, 52, 55, 55, 55, 62, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 11, 55, 55, 55, 55, 55, 55, 55, 29, 14, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 13, 30, 55, 55, 55, 55, 55, 55, 55, 55, 53, 60, 53, 55, 55, 55, 54, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 40, 14, 39, 48, 31, 39, 48, 31, 14, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 23, 30, 55, 55, 55, 55, 63, 64, 55, 57, 58, 52, 55, 55, 55, 62, 21, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 31, 40, 31, 48, 31, 30, 31, 30, 31, 48, 31, 30, 31, 48, 14, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],\r\n         \"height\":31,\r\n         \"id\":5,\r\n         \"name\":\"layer2\",\r\n         \"opacity\":1,\r\n         \"type\":\"tilelayer\",\r\n         \"visible\":true,\r\n         \"width\":54,\r\n         \"x\":0,\r\n         \"y\":0\r\n        }, \r\n        {\r\n         \"data\":[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 10,\r\n            11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 18, 18,\r\n            11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 56, 56,\r\n            11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 56, 56,\r\n            11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 56, 56,\r\n            11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2,\r\n            11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 14, 10, 10, 10, 10, 10, 10,\r\n            11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 14, 10, 10, 10, 10, 10, 10, 10,\r\n            11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 14, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            13, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 14, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 49, 49, 49, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 55, 55, 55, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],\r\n         \"height\":31,\r\n         \"id\":1,\r\n         \"name\":\"layer1\",\r\n         \"opacity\":1,\r\n         \"type\":\"tilelayer\",\r\n         \"visible\":false,\r\n         \"width\":54,\r\n         \"x\":0,\r\n         \"y\":0\r\n        }],\r\n \"nextlayerid\":6,\r\n \"nextobjectid\":1,\r\n \"orientation\":\"orthogonal\",\r\n \"renderorder\":\"right-down\",\r\n \"tiledversion\":\"1.10.1\",\r\n \"tileheight\":32,\r\n \"tilesets\":[\r\n        {\r\n         \"columns\":8,\r\n         \"firstgid\":1,\r\n         \"image\":\"..\\/Tiles\\/Tileset.png\",\r\n         \"imageheight\":256,\r\n         \"imagewidth\":256,\r\n         \"margin\":0,\r\n         \"name\":\"tiles\",\r\n         \"spacing\":0,\r\n         \"tilecount\":64,\r\n         \"tileheight\":32,\r\n         \"tilewidth\":32\r\n        }],\r\n \"tilewidth\":32,\r\n \"type\":\"map\",\r\n \"version\":\"1.10\",\r\n \"width\":54\r\n};","import tilesImageUrl from \"./assets/Tiles/Tileset.png\"\r\nimport bulletUrl from \"./assets/Soldier/Bullet.png\"\r\n\r\nimport background1Url from \"./assets/Background/Night/1.png\"\r\nimport background4Url from \"./assets/Background/Night/4.png\"\r\nimport mapUrl from \"./assets/TileStuff/map.json\"\r\n\r\nimport soldierIdleUrl from \"./assets/Soldier/Idle.png\"\r\nimport soldierWalkUrl from \"./assets/Soldier/Walk.png\"\r\nimport soldierRunUrl from \"./assets/Soldier/Run.png\"\r\nimport soldierShotUrl from \"./assets/Soldier/Shot1.png\"\r\nimport soldierDeadUrl from \"./assets/Soldier/Dead.png\"\r\n\r\nimport zombieIdleUrl from \"./assets/ZombieWoman/Idle.png\"\r\nimport zombieWalkUrl from \"./assets/ZombieWoman/Walk.png\"\r\nimport zombieRunUrl from \"./assets/ZombieWoman/Run.png\"\r\nimport zombieAttackUrl from \"./assets/ZombieWoman/Attack2.png\"\r\nimport zombieDeadUrl from \"./assets/ZombieWoman/Dead.png\"\r\n\r\nlet settings;\r\nlet config;\r\n\r\nexport default class Level1 extends Phaser.Scene {\r\n    constructor() {\r\n        super(\"Level1\");\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"background1\", background1Url);\r\n        this.bg = this.load.image(\"background2\", background4Url);\r\n        this.load.image(\"tilesImage\", tilesImageUrl);\r\n        this.load.image(\"bullet\", bulletUrl);\r\n        this.load.tilemapTiledJSON(\"map\", mapUrl);\r\n\r\n        const soldierSize = {frameWidth: 128, frameHeight: 128}\r\n        const zombieSize = {frameWidth: 96, frameHeight: 96}\r\n\r\n        this.load.spritesheet(\"soldierIdleSheet\", soldierIdleUrl, soldierSize);\r\n        this.load.spritesheet(\"soldierWalkSheet\", soldierWalkUrl, soldierSize);\r\n        this.load.spritesheet(\"soldierRunSheet\", soldierRunUrl, soldierSize);\r\n        this.load.spritesheet(\"soldierAttackSheet\", soldierShotUrl, soldierSize);\r\n        this.load.spritesheet(\"soldierDeadSheet\", soldierDeadUrl, soldierSize);\r\n\r\n        this.load.spritesheet(\"zombieIdleSheet\", zombieIdleUrl, zombieSize);\r\n        this.load.spritesheet(\"zombieWalkSheet\", zombieWalkUrl, zombieSize);\r\n        this.load.spritesheet(\"zombieRunSheet\", zombieRunUrl, zombieSize);\r\n        this.load.spritesheet(\"zombieAttackSheet\", zombieAttackUrl, zombieSize);\r\n        this.load.spritesheet(\"zombieDeadSheet\", zombieDeadUrl, zombieSize);\r\n    }\r\n\r\n    create(data) {\r\n        config = data.config;\r\n        settings = data.settings;\r\n\r\n        console.log(\"Level 1\");\r\n        const bgWidth = 576*2;\r\n        const bgHeight = 324*2 - 70;\r\n\r\n        this.physics.world.setBounds(0, 0, config.width, config.height);\r\n        this.physics.world.setBoundsCollision(true, true, false, false);\r\n\r\n        this.add.image(config.width / 2, \r\n        config.height / 2, \"background1\").setScale(3.1);\r\n\r\n        this.add.image(bgWidth, bgHeight, \"background2\").setScale(2);\r\n        this.add.image(0, bgHeight, \"background2\").setScale(2);\r\n        \r\n        this.map = this.make.tilemap({key: \"map\", tileWidth: 32, tileHeight: 32});\r\n        this.tileset = this.map.addTilesetImage(\"tiles\", \"tilesImage\");\r\n        this.layer = this.map.createLayer(\"layer1\", \"tiles\", 0, 0);\r\n        this.layer.setCollisionBetween(1, 48);\r\n        this.add.text(30, 740, \r\n        \" left & right arrow: move\\n up arrow: jump\\n down arrow: shoot\\n shift + move: run\",\r\n        { fontSize: 16, color: \"#BBBBBB\"});\r\n\r\n        this.soldier = this.createSoldier(4, 28);\r\n        \r\n        this.bullets = this.physics.add.group({\r\n            classType: Bullet,\r\n            runChildUpdate: true\r\n        })\r\n\r\n        this.zombies = this.physics.add.group({\r\n            classType: Zombie,\r\n            runChildUpdate: true\r\n        })\r\n\r\n        this.physics.add.overlap(\r\n            this.bullets,\r\n            this.layer,\r\n            (bullet, tile) => {\r\n                bullet.destroy();\r\n            },\r\n            (bullet, tile) => {\r\n              return tile.collides;\r\n            }\r\n        );\r\n\r\n        this.physics.add.overlap(\r\n            this.bullets,\r\n            this.zombies,\r\n            (bullet, zombie) => {\r\n                if (!this.bullet.hasKilled) {\r\n                    this.bullet.hasKilled = true;\r\n                    bullet.destroy();\r\n                    zombie.die();\r\n                    this.zombies.remove(zombie);\r\n                }\r\n            },\r\n        );\r\n\r\n        this.soldierZombieCollider = this.physics.add.overlap(\r\n            this.soldier,\r\n            this.zombies,\r\n            (soldier, zombie) => {\r\n                this.soldierDead = true;\r\n                zombie.attacking = false;\r\n                zombie.body.velocity.x = 0;\r\n                zombie.anims.play(\"zombieAttack\", true);\r\n                zombie.on(Phaser.Animations.Events.ANIMATION_COMPLETE_KEY + \"zombieAttack\", () => {\r\n                    zombie.anims.play(\"zombieIdle\", true);\r\n                })\r\n                this.soldier.anims.play(\"soldierDead\", true);\r\n                this.soldierZombieCollider.destroy();\r\n            },\r\n        );\r\n\r\n        this.physics.add.collider(\r\n            this.soldier,\r\n            this.layer,\r\n            (soldier, tile) => {\r\n                this.soldierLocation = [tile.x, tile.y];\r\n                console.log(this.soldierLocation.toString());\r\n            }\r\n        );\r\n\r\n        this.cursors = this.input.keyboard.createCursorKeys();\r\n        this.shift = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SHIFT);\r\n\r\n        this.cameras.main.setBounds(0, 0, config.width, config.height);\r\n        this.cameras.main.setZoom(3);\r\n        this.cameras.main.startFollow(this.soldier, true, 0.05, 0.05);\r\n\r\n        this.createSoldierAnimations();\r\n        this.createZombieAnimations();\r\n\r\n        this.soldier.on(Phaser.Animations.Events.ANIMATION_COMPLETE_KEY + \"soldierAttack\", () => {\r\n            this.soldier.anims.play(\"soldierIdle\", true);\r\n        })\r\n    }\r\n\r\n    update(time, delta) {\r\n        if (this.soldier.y > config.height || this.soldier.y < 0) {\r\n            this.soldierDead = true;\r\n        }\r\n        if (!this.soldierDead) {\r\n            this.soldierController(delta);\r\n            this.checkSoldierLocation();\r\n        } else {\r\n            this.soldier.body.velocity.x *= 0.95;\r\n            this.soldierDeadTimer += delta;\r\n            if (this.soldierDeadTimer > settings.restartTime) {\r\n                this.scene.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    soldierController(delta) {\r\n        if (this.cursors.left.isDown && this.shift.isDown && this.soldier.body.onFloor()) {\r\n            if (this.soldier.body.velocity.x > -settings.soldierRunSpeed) {\r\n                this.soldier.body.velocity.x -= 10;\r\n            }\r\n            this.soldier.anims.play(\"soldierRun\", true);\r\n        }\r\n        else if (this.cursors.left.isDown && this.soldier.body.velocity.x >= -settings.soldierWalkSpeed) {\r\n            this.soldier.body.velocity.x  = -settings.soldierWalkSpeed;\r\n            if (this.soldier.body.onFloor()) {\r\n                this.soldier.anims.play(\"soldierWalk\", true);\r\n            }\r\n        }\r\n        else if (this.cursors.right.isDown && this.shift.isDown && this.soldier.body.onFloor()) {\r\n            if (this.soldier.body.velocity.x < settings.soldierRunSpeed) {\r\n                this.soldier.body.velocity.x += 10;\r\n            }\r\n            this.soldier.anims.play(\"soldierRun\", true);\r\n        }\r\n        else if (this.cursors.right.isDown && this.soldier.body.velocity.x <= settings.soldierWalkSpeed) {\r\n            this.soldier.body.velocity.x  = settings.soldierWalkSpeed;\r\n            this.soldier.anims.play(\"soldierWalk\", true); \r\n        } \r\n        else if (this.soldier.body.onFloor()) {\r\n            if (this.soldier.body.velocity.x < 0.1 && this.soldier.body.velocity.x > -0.1) {\r\n                this.soldier.body.velocity.x = 0;\r\n            } else {\r\n                this.soldier.body.velocity.x *= 0.7;\r\n            }\r\n        }\r\n\r\n        if (this.soldier.body.velocity.x == 0 && this.soldier.anims.getName() != \"soldierAttack\") {\r\n            this.soldier.anims.play(\"soldierIdle\", true);\r\n        }\r\n        else if (this.soldier.body.velocity.x < 0) {\r\n            this.soldier.setScale(-1, 1);\r\n            this.soldier.setOffset(settings.soldierOffsetXLeft, settings.soldierOffsetY);\r\n            this.soldierDirection = -1;\r\n        }\r\n        else if (this.soldier.body.velocity.x > 0) {\r\n            this.soldier.setScale(1, 1);\r\n            this.soldier.setOffset(settings.soldierOffsetXRight, settings.soldierOffsetY);\r\n            this.soldierDirection = 1;\r\n        }\r\n\r\n        if (this.cursors.up.isDown && this.soldier.body.onFloor()) {\r\n            this.soldier.body.velocity.y = -settings.soldierRunSpeed;\r\n        }\r\n\r\n        if (this.soldier.body.velocity.y < 0) {\r\n            this.soldier.anims.play(\"soldierJump\", true);\r\n        }\r\n        else if (this.soldier.body.velocity.y > 0) {\r\n            this.soldier.anims.play(\"soldierFall\", true);\r\n        }\r\n\r\n        if (this.cursors.down.isDown && this.soldier.body.velocity.x == 0 \r\n            && this.soldier.body.velocity.y == 0 && this.soldierShotTimer > 330) {\r\n            this.soldierShotTimer = 0;\r\n            this.bullet = this.bullets.get();\r\n            this.soldier.anims.play(\"soldierAttack\");\r\n            if (this.bullet) {\r\n                this.bullet.fire(this.soldier, this.soldierDirection);\r\n            }\r\n        }\r\n\r\n        this.soldierShotTimer += delta;\r\n\r\n        if (Phaser.Input.Keyboard.JustDown(this.cursors.space)) {\r\n            this.soldier.y -= 150;\r\n        }\r\n    }\r\n\r\n    checkSoldierLocation() {\r\n        const string = \"7,19 9,19 8,19\"\r\n        if (this.soldierLocation.toString() == \"53,24\") {\r\n            this.scene.start(\"Level2\", {config, settings});\r\n        }\r\n    }\r\n\r\n    createSoldier(tileX, tileY) {\r\n        const x = tileX*32 + 21\r\n        const y = tileY*32 - 63\r\n        const soldier = this.physics.add.sprite(x, y, \"soldierIdleSheet\");\r\n        soldier.body.gravity.y = settings.gravity;\r\n        soldier.setSize(settings.soldierSizeX, settings.soldierSizeY);\r\n        soldier.setOffset(settings.soldierOffsetXRight, settings.soldierOffsetY);\r\n        soldier.setCollideWorldBounds(true);\r\n        this.soldierDirection = 1;\r\n        this.soldierLocation = [0, 0];\r\n        this.soldierDead = false;\r\n        this.soldierDeadTimer = 0;\r\n        this.soldierShotTimer = 0;\r\n        return soldier\r\n    }\r\n\r\n    createZombie(tileX, tileY) {\r\n        const x = tileX*32 + 19\r\n        const y = tileY*32 - 64\r\n        const zombie = this.zombies.get(x, y);\r\n        zombie.setSize(settings.zombieSizeX, settings.zombieSizeY);\r\n        zombie.setOffset(settings.zombieOffsetXRight, settings.zombieOffsetY);\r\n        zombie.body.gravity.y = settings.gravity;\r\n        this.physics.add.collider(zombie, this.layer);\r\n        return zombie;\r\n    }\r\n    \r\n    createSoldierAnimations() {\r\n        this.anims.create({\r\n            key: \"soldierIdle\",\r\n            frames: this.anims.generateFrameNumbers(\"soldierIdleSheet\", {start: 0, end : 8}),\r\n            frameRate: 5,\r\n            repeat: -1\r\n        })\r\n        this.anims.create({\r\n            key: \"soldierWalk\",\r\n            frames: this.anims.generateFrameNumbers(\"soldierWalkSheet\", {start: 0, end : 7}),\r\n            frameRate: 8,\r\n            repeat: -1\r\n        })\r\n        this.anims.create({\r\n            key: \"soldierRun\",\r\n            frames: this.anims.generateFrameNumbers(\"soldierRunSheet\", {start: 0, end : 7}),\r\n            frameRate: 12,\r\n            repeat: -1\r\n        })\r\n        this.anims.create({\r\n            key: \"soldierJump\",\r\n            frames: [{key: \"soldierRunSheet\", frame: 2}],\r\n            frameRate: 10,\r\n        })\r\n        this.anims.create({\r\n            key: \"soldierFall\",\r\n            frames: [{key: \"soldierRunSheet\", frame: 3}],\r\n            frameRate: 10,\r\n        })\r\n        this.anims.create({\r\n            key: \"soldierAttack\",\r\n            frames: this.anims.generateFrameNumbers(\"soldierAttackSheet\", {start: 0, end : 3}),\r\n            frameRate: 12,\r\n        })\r\n        this.anims.create({\r\n            key: \"soldierDead\",\r\n            frames: this.anims.generateFrameNumbers(\"soldierDeadSheet\", {start: 0, end : 3}),\r\n            frameRate: 8,\r\n        })\r\n    }\r\n\r\n    createZombieAnimations() {\r\n        this.anims.create({\r\n            key: \"zombieIdle\",\r\n            frames: this.anims.generateFrameNumbers(\"zombieIdleSheet\", {start: 0, end : 4}),\r\n            frameRate: 2,\r\n            repeat: -1\r\n        })\r\n        this.anims.create({\r\n            key: \"zombieWalk\",\r\n            frames: this.anims.generateFrameNumbers(\"zombieWalkSheet\", {start: 0, end : 6}),\r\n            frameRate: 8,\r\n            repeat: -1\r\n        })\r\n        this.anims.create({\r\n            key: \"zombieRun\",\r\n            frames: this.anims.generateFrameNumbers(\"zombieRunSheet\", {start: 0, end : 6}),\r\n            frameRate: 12,\r\n            repeat: -1\r\n        })\r\n        this.anims.create({\r\n            key: \"zombieJump\",\r\n            frames: [{key: \"zombieRunSheet\", frame: 0}],\r\n            frameRate: 10,\r\n        })\r\n        this.anims.create({\r\n            key: \"zombieFall\",\r\n            frames: [{key: \"zombieRunSheet\", frame: 5}],\r\n            frameRate: 10,\r\n        })\r\n        this.anims.create({\r\n            key: \"zombieAttack\",\r\n            frames: this.anims.generateFrameNumbers(\"zombieAttackSheet\", {start: 0, end : 3}),\r\n            frameRate: 16,\r\n        })\r\n        this.anims.create({\r\n            key: \"zombieDead\",\r\n            frames: this.anims.generateFrameNumbers(\"zombieDeadSheet\", {start: 0, end : 4}),\r\n            frameRate: 10,\r\n        })\r\n    }\r\n}\r\n\r\nclass Zombie extends Phaser.Physics.Arcade.Sprite {\r\n    constructor (scene, x, y){\r\n        super(scene, x, y, \"zombieIdleSheet\");\r\n        this.direction = 1;\r\n        this.dead = false;\r\n        this.attacking = false;\r\n    }\r\n\r\n    attack(target) {\r\n        this.target = target;\r\n        this.targetX = target.body.position.x;\r\n        this.attacking = true;\r\n    }\r\n\r\n    die() {\r\n        this.dead = true;\r\n        this.body.velocity.x = 0;\r\n        if (this.direction == 1) {\r\n            this.setScale(-1, 1);\r\n            this.setOffset(settings.zombieOffsetXLeft, settings.zombieOffsetY);\r\n        } else {\r\n            this.setScale(1, 1);\r\n            this.setOffset(settings.zombieOffsetXRight, settings.zombieOffsetY);\r\n        }\r\n        this.anims.play(\"zombieDead\", true);\r\n        this.once(Phaser.Animations.Events.ANIMATION_COMPLETE_KEY + \"zombieDead\", () => {\r\n            this.setActive(0);\r\n        })\r\n    }\r\n\r\n    update() {\r\n        if (this.attacking && !this.dead) {\r\n            if (Phaser.Math.Difference(this.targetX, this.body.position.x) < 1) {\r\n                this.body.velocity.x = 0;\r\n\r\n            }\r\n            else if (this.targetX < this.body.position.x) {\r\n                this.body.velocity.x = -settings.zombieWalkSpeed;\r\n            }\r\n            else if (this.targetX > this.body.position.x) {\r\n                this.body.velocity.x = settings.zombieWalkSpeed;\r\n            }\r\n    \r\n            if ((this.body.blocked.left || this.body.blocked.right) && this.body.velocity.y == 0) {\r\n                this.body.velocity.y = -settings.zombieWalkSpeed*3;\r\n            }\r\n        }\r\n        \r\n        if (this.body.velocity.y < 0) {\r\n            this.anims.play(\"zombieJump\", true);\r\n        }\r\n        else if (this.body.velocity.y > 0) {\r\n            this.anims.play(\"zombieFall\", true);\r\n        }\r\n\r\n        if (this.body.velocity.x == 0 && this.anims.getName() != \"zombieAttack\" && !this.dead) {\r\n            this.anims.play(\"zombieIdle\", true);\r\n        }\r\n        else if (this.body.velocity.x < 0 && this.body.velocity.y == 0) {\r\n            this.anims.play(\"zombieWalk\", true);\r\n            this.direction = -1;\r\n            this.setScale(-1, 1);\r\n            this.setOffset(settings.zombieOffsetXLeft, settings.zombieOffsetY);\r\n            this.zombieDirection = -1;\r\n        }\r\n        else if (this.body.velocity.x > 0 && this.body.velocity.y == 0) {\r\n            this.anims.play(\"zombieWalk\", true);\r\n            this.direction = 1;\r\n            this.setScale(1, 1);\r\n            this.setOffset(settings.zombieOffsetXRight, settings.zombieOffsetY);\r\n            this.zombieDirection = 1;\r\n        }\r\n\r\n        if (this.body.onFloor()) {\r\n            if (this.body.velocity.x < 0.1 && this.body.velocity.x > -0.1) {\r\n                this.body.velocity.x = 0;\r\n            } else {\r\n                this.body.velocity.x *= 0.7;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Bullet extends Phaser.Physics.Arcade.Sprite {\r\n    constructor (scene){\r\n        super(scene, 0, 0, \"bullet\");\r\n        this.hasKilled = false;\r\n    }\r\n\r\n    fire(shooter, direction)\r\n    {\r\n        if (direction == 1) {\r\n            this.setPosition(shooter.x + 33, shooter.y + 19);\r\n            this.speed = settings.bulletSpeed;\r\n        } \r\n        else if (direction == -1) {\r\n            this.setPosition(shooter.x - 33, shooter.y + 19);\r\n            this.speed = -settings.bulletSpeed;\r\n        }\r\n\r\n        this.lifespan = 1000;\r\n    }\r\n\r\n    preUpdate(time, delta) {\r\n        super.preUpdate(time, delta);\r\n        this.lifespan -= delta;\r\n        this.x += this.speed * delta;\r\n\r\n        if (this.lifespan <= 0)\r\n        {\r\n            this.destroy();\r\n        }\r\n    }\r\n}","import tilesImageUrl from \"./assets/Tiles/Tileset.png\"\r\nimport bulletUrl from \"./assets/Soldier/Bullet.png\"\r\n\r\nimport background1Url from \"./assets/Background/Night/1.png\"\r\nimport background2Url from \"./assets/Background/Night/2.png\"\r\nimport mapUrl from \"./assets/TileStuff/map.json\"\r\n\r\nimport soldierIdleUrl from \"./assets/Soldier/Idle.png\"\r\nimport soldierWalkUrl from \"./assets/Soldier/Walk.png\"\r\nimport soldierRunUrl from \"./assets/Soldier/Run.png\"\r\nimport soldierShotUrl from \"./assets/Soldier/Shot1.png\"\r\nimport soldierDeadUrl from \"./assets/Soldier/Dead.png\"\r\n\r\nimport zombieIdleUrl from \"./assets/ZombieWoman/Idle.png\"\r\nimport zombieWalkUrl from \"./assets/ZombieWoman/Walk.png\"\r\nimport zombieRunUrl from \"./assets/ZombieWoman/Run.png\"\r\nimport zombieAttackUrl from \"./assets/ZombieWoman/Attack2.png\"\r\nimport zombieDeadUrl from \"./assets/ZombieWoman/Dead.png\"\r\n\r\nlet settings;\r\nlet config;\r\n\r\nexport default class Level2 extends Phaser.Scene {\r\n    constructor() {\r\n        super(\"Level2\");\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"background1\", background1Url);\r\n        this.load.image(\"background2\", background2Url);\r\n        this.load.image(\"tilesImage\", tilesImageUrl);\r\n        this.load.image(\"bullet\", bulletUrl);\r\n        this.load.tilemapTiledJSON(\"map\", mapUrl);\r\n\r\n        const soldierSize = {frameWidth: 128, frameHeight: 128}\r\n        const zombieSize = {frameWidth: 96, frameHeight: 96}\r\n\r\n        this.load.spritesheet(\"soldierIdleSheet\", soldierIdleUrl, soldierSize);\r\n        this.load.spritesheet(\"soldierWalkSheet\", soldierWalkUrl, soldierSize);\r\n        this.load.spritesheet(\"soldierRunSheet\", soldierRunUrl, soldierSize);\r\n        this.load.spritesheet(\"soldierAttackSheet\", soldierShotUrl, soldierSize);\r\n        this.load.spritesheet(\"soldierDeadSheet\", soldierDeadUrl, soldierSize);\r\n\r\n        this.load.spritesheet(\"zombieIdleSheet\", zombieIdleUrl, zombieSize);\r\n        this.load.spritesheet(\"zombieWalkSheet\", zombieWalkUrl, zombieSize);\r\n        this.load.spritesheet(\"zombieRunSheet\", zombieRunUrl, zombieSize);\r\n        this.load.spritesheet(\"zombieAttackSheet\", zombieAttackUrl, zombieSize);\r\n        this.load.spritesheet(\"zombieDeadSheet\", zombieDeadUrl, zombieSize);\r\n    }\r\n\r\n    create(data) {\r\n        config = data.config;\r\n        settings = data.settings;\r\n        const bgWidth = 576*2;\r\n        const bgHeight = -2;\r\n\r\n        this.physics.world.setBounds(0, 0, config.width, config.height);\r\n        this.physics.world.setBoundsCollision(true, true, false, false);\r\n\r\n        this.add.image(config.width / 2, -80, \"background1\").setScale(3.1);\r\n\r\n        this.add.image(bgWidth + 150, bgHeight, \"background2\").setScale(2);\r\n        this.add.image(0 + 150, bgHeight, \"background2\").setScale(2);\r\n        \r\n        this.map = this.make.tilemap({key: \"map\", tileWidth: 32, tileHeight: 32});\r\n        this.tileset = this.map.addTilesetImage(\"tiles\", \"tilesImage\");\r\n        this.layer = this.map.createLayer(\"layer2\", \"tiles\", 0, 0);\r\n        this.layer.setCollisionBetween(1, 48);\r\n\r\n        this.soldier = this.createSoldier(0, 10);\r\n\r\n        this.bullets = this.physics.add.group({\r\n            classType: Bullet,\r\n            runChildUpdate: true\r\n        })\r\n\r\n        this.zombies = this.physics.add.group({\r\n            classType: Zombie,\r\n            runChildUpdate: true\r\n        })\r\n\r\n        this.physics.add.overlap(\r\n            this.bullets,\r\n            this.layer,\r\n            (bullet, tile) => {\r\n                bullet.destroy();\r\n            },\r\n            (bullet, tile) => {\r\n              return tile.collides;\r\n            }\r\n        );\r\n\r\n        this.physics.add.overlap(\r\n            this.bullets,\r\n            this.zombies,\r\n            (bullet, zombie) => {\r\n                if (!this.bullet.hasKilled) {\r\n                    this.bullet.hasKilled = true;\r\n                    bullet.destroy();\r\n                    zombie.die();\r\n                    this.zombies.remove(zombie);\r\n                }\r\n            },\r\n        );\r\n\r\n        this.soldierZombieCollider = this.physics.add.overlap(\r\n            this.soldier,\r\n            this.zombies,\r\n            (soldier, zombie) => {\r\n                this.soldierDead = true;\r\n                zombie.attacking = false;\r\n                zombie.body.velocity.x = 0;\r\n                zombie.anims.play(\"zombieAttack\", true);\r\n                zombie.on(Phaser.Animations.Events.ANIMATION_COMPLETE_KEY + \"zombieAttack\", () => {\r\n                    zombie.anims.play(\"zombieIdle\", true);\r\n                })\r\n                this.soldier.anims.play(\"soldierDead\", true);\r\n                this.soldierZombieCollider.destroy();\r\n            },\r\n        );\r\n\r\n        this.physics.add.collider(\r\n            this.soldier,\r\n            this.layer,\r\n            (soldier, tile) => {\r\n                this.soldierLocation = [tile.x, tile.y];\r\n                console.log(this.soldierLocation.toString());\r\n            }\r\n        );\r\n\r\n        this.cursors = this.input.keyboard.createCursorKeys();\r\n        this.shift = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SHIFT);\r\n\r\n        this.cameras.main.setBounds(0, 0, config.width, config.height);\r\n        this.cameras.main.setZoom(3);\r\n        this.cameras.main.startFollow(this.soldier, true, 0.05, 0.05);\r\n\r\n        this.createSoldierAnimations();\r\n        this.createZombieAnimations();\r\n\r\n        this.soldier.on(Phaser.Animations.Events.ANIMATION_COMPLETE_KEY + \"soldierAttack\", () => {\r\n            this.soldier.anims.play(\"soldierIdle\", true);\r\n        })\r\n\r\n        this.zombieList1 = [];\r\n        this.zombieList1.push(this.createZombie(8, 20, -1));\r\n        this.zombieList1.push(this.createZombie(8, 20, -1));\r\n        this.zombieList1.push(this.createZombie(8, 20, -1));\r\n        this.zombieList1.push(this.createZombie(9, 20, -1));\r\n        this.zombieList1.push(this.createZombie(10, 20, 1));\r\n        this.zombieList1.push(this.createZombie(12, 20, -1));\r\n        this.zombieList1.push(this.createZombie(13, 20, 1));\r\n        this.zombieList1.push(this.createZombie(14, 20,-1));\r\n\r\n        this.zombieList2 = [];\r\n        this.zombieList2.push(this.createZombie(42, 10, -1));\r\n        this.zombieList2.push(this.createZombie(44, 10, 1));\r\n    }\r\n\r\n    update(time, delta) {\r\n        if (this.soldier.y > config.height || this.soldier.y < 0) {\r\n            this.soldierDead = true;\r\n        }\r\n        if (!this.soldierDead) {\r\n            this.soldierController(delta);\r\n            this.checkSoldierLocation();\r\n        } else {\r\n            this.soldier.body.velocity.x *= 0.95;\r\n            this.soldierDeadTimer += delta;\r\n            if (this.soldierDeadTimer > settings.restartTime) {\r\n                this.scene.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    soldierController(delta) {\r\n        if (this.cursors.left.isDown && this.shift.isDown && this.soldier.body.onFloor()) {\r\n            if (this.soldier.body.velocity.x > -settings.soldierRunSpeed) {\r\n                this.soldier.body.velocity.x -= 10;\r\n            }\r\n            this.soldier.anims.play(\"soldierRun\", true);\r\n        }\r\n        else if (this.cursors.left.isDown && this.soldier.body.velocity.x >= -settings.soldierWalkSpeed) {\r\n            this.soldier.body.velocity.x  = -settings.soldierWalkSpeed;\r\n            if (this.soldier.body.onFloor()) {\r\n                this.soldier.anims.play(\"soldierWalk\", true);\r\n            }\r\n        }\r\n        else if (this.cursors.right.isDown && this.shift.isDown && this.soldier.body.onFloor()) {\r\n            if (this.soldier.body.velocity.x < settings.soldierRunSpeed) {\r\n                this.soldier.body.velocity.x += 10;\r\n            }\r\n            this.soldier.anims.play(\"soldierRun\", true);\r\n        }\r\n        else if (this.cursors.right.isDown && this.soldier.body.velocity.x <= settings.soldierWalkSpeed) {\r\n            this.soldier.body.velocity.x  = settings.soldierWalkSpeed;\r\n            this.soldier.anims.play(\"soldierWalk\", true); \r\n        } \r\n        else if (this.soldier.body.onFloor()) {\r\n            if (this.soldier.body.velocity.x < 0.1 && this.soldier.body.velocity.x > -0.1) {\r\n                this.soldier.body.velocity.x = 0;\r\n            } else {\r\n                this.soldier.body.velocity.x *= 0.7;\r\n            }\r\n        }\r\n\r\n        if (this.soldier.body.velocity.x == 0 && this.soldier.anims.getName() != \"soldierAttack\") {\r\n            this.soldier.anims.play(\"soldierIdle\", true);\r\n        }\r\n        else if (this.soldier.body.velocity.x < 0) {\r\n            this.soldier.setScale(-1, 1);\r\n            this.soldier.setOffset(settings.soldierOffsetXLeft, settings.soldierOffsetY);\r\n            this.soldierDirection = -1;\r\n        }\r\n        else if (this.soldier.body.velocity.x > 0) {\r\n            this.soldier.setScale(1, 1);\r\n            this.soldier.setOffset(settings.soldierOffsetXRight, settings.soldierOffsetY);\r\n            this.soldierDirection = 1;\r\n        }\r\n\r\n        if (this.cursors.up.isDown && this.soldier.body.onFloor()) {\r\n            this.soldier.body.velocity.y = -settings.soldierRunSpeed;\r\n        }\r\n\r\n        if (this.soldier.body.velocity.y < 0) {\r\n            this.soldier.anims.play(\"soldierJump\", true);\r\n        }\r\n        else if (this.soldier.body.velocity.y > 0) {\r\n            this.soldier.anims.play(\"soldierFall\", true);\r\n        }\r\n\r\n        if (this.cursors.down.isDown && this.soldier.body.velocity.x == 0 \r\n            && this.soldier.body.velocity.y == 0 && this.soldierShotTimer > 330) {\r\n            this.soldierShotTimer = 0;\r\n            this.bullet = this.bullets.get();\r\n            this.soldier.anims.play(\"soldierAttack\");\r\n            if (this.bullet) {\r\n                this.bullet.fire(this.soldier, this.soldierDirection);\r\n            }\r\n        }\r\n\r\n        this.soldierShotTimer += delta;\r\n\r\n        if (Phaser.Input.Keyboard.JustDown(this.cursors.space)) {\r\n            this.soldier.y -= 150;\r\n        }\r\n    }\r\n\r\n    checkSoldierLocation() {\r\n        if (this.soldierLocation.toString() == \"11,20\" && !this.soldierDead) {\r\n            this.zombieList1.forEach(zombie => {\r\n                zombie.attack(this.soldier);\r\n            });\r\n        }\r\n\r\n        if (this.soldierLocation.toString() == \"34,10\" && !this.soldierDead) {\r\n            this.zombieList2.forEach(zombie => {\r\n                zombie.attack(this.soldier);\r\n            });\r\n        }\r\n    }\r\n\r\n    createSoldier(tileX, tileY) {\r\n        const x = tileX*32 + 21\r\n        const y = tileY*32 - 63\r\n        const soldier = this.physics.add.sprite(x, y, \"soldierIdleSheet\");\r\n        soldier.body.gravity.y = settings.gravity;\r\n        soldier.setSize(settings.soldierSizeX, settings.soldierSizeY);\r\n        soldier.setOffset(settings.soldierOffsetXRight, settings.soldierOffsetY);\r\n        this.soldierDirection = 1;\r\n        this.soldierLocation = [0, 0];\r\n        this.soldierDead = false;\r\n        this.soldierDeadTimer = 0;\r\n        this.soldierShotTimer = 0;\r\n        return soldier\r\n    }\r\n\r\n    createZombie(tileX, tileY, direction) {\r\n        const x = tileX*32 + 19\r\n        const y = tileY*32 - 64\r\n        const zombie = this.zombies.get(x, y);\r\n        zombie.setSize(settings.zombieSizeX, settings.zombieSizeY);\r\n        if (direction == -1) {\r\n            zombie.setOffset(settings.zombieOffsetXLeft, settings.zombieOffsetY);\r\n            zombie.setScale(-1, 1)\r\n            zombie.direction = -1;\r\n        } else {\r\n            zombie.setOffset(settings.zombieOffsetXRight, settings.zombieOffsetY);\r\n            zombie.direction = 1;\r\n        }\r\n        zombie.body.gravity.y = settings.gravity;\r\n        this.physics.add.collider(zombie, this.layer);\r\n        return zombie;\r\n    }\r\n    \r\n    createSoldierAnimations() {\r\n        this.anims.create({\r\n            key: \"soldierIdle\",\r\n            frames: this.anims.generateFrameNumbers(\"soldierIdleSheet\", {start: 0, end : 8}),\r\n            frameRate: 5,\r\n            repeat: -1\r\n        })\r\n        this.anims.create({\r\n            key: \"soldierWalk\",\r\n            frames: this.anims.generateFrameNumbers(\"soldierWalkSheet\", {start: 0, end : 7}),\r\n            frameRate: 8,\r\n            repeat: -1\r\n        })\r\n        this.anims.create({\r\n            key: \"soldierRun\",\r\n            frames: this.anims.generateFrameNumbers(\"soldierRunSheet\", {start: 0, end : 7}),\r\n            frameRate: 12,\r\n            repeat: -1\r\n        })\r\n        this.anims.create({\r\n            key: \"soldierJump\",\r\n            frames: [{key: \"soldierRunSheet\", frame: 2}],\r\n            frameRate: 10,\r\n        })\r\n        this.anims.create({\r\n            key: \"soldierFall\",\r\n            frames: [{key: \"soldierRunSheet\", frame: 3}],\r\n            frameRate: 10,\r\n        })\r\n        this.anims.create({\r\n            key: \"soldierAttack\",\r\n            frames: this.anims.generateFrameNumbers(\"soldierAttackSheet\", {start: 0, end : 3}),\r\n            frameRate: 12,\r\n        })\r\n        this.anims.create({\r\n            key: \"soldierDead\",\r\n            frames: this.anims.generateFrameNumbers(\"soldierDeadSheet\", {start: 0, end : 3}),\r\n            frameRate: 8,\r\n        })\r\n    }\r\n\r\n    createZombieAnimations() {\r\n        this.anims.create({\r\n            key: \"zombieIdle\",\r\n            frames: this.anims.generateFrameNumbers(\"zombieIdleSheet\", {start: 0, end : 4}),\r\n            frameRate: 2,\r\n            repeat: -1\r\n        })\r\n        this.anims.create({\r\n            key: \"zombieWalk\",\r\n            frames: this.anims.generateFrameNumbers(\"zombieWalkSheet\", {start: 0, end : 6}),\r\n            frameRate: 8,\r\n            repeat: -1\r\n        })\r\n        this.anims.create({\r\n            key: \"zombieRun\",\r\n            frames: this.anims.generateFrameNumbers(\"zombieRunSheet\", {start: 0, end : 6}),\r\n            frameRate: 12,\r\n            repeat: -1\r\n        })\r\n        this.anims.create({\r\n            key: \"zombieJump\",\r\n            frames: [{key: \"zombieRunSheet\", frame: 0}],\r\n            frameRate: 10,\r\n        })\r\n        this.anims.create({\r\n            key: \"zombieFall\",\r\n            frames: [{key: \"zombieRunSheet\", frame: 5}],\r\n            frameRate: 10,\r\n        })\r\n        this.anims.create({\r\n            key: \"zombieAttack\",\r\n            frames: this.anims.generateFrameNumbers(\"zombieAttackSheet\", {start: 0, end : 3}),\r\n            frameRate: 16,\r\n        })\r\n        this.anims.create({\r\n            key: \"zombieDead\",\r\n            frames: this.anims.generateFrameNumbers(\"zombieDeadSheet\", {start: 0, end : 4}),\r\n            frameRate: 10,\r\n        })\r\n    }\r\n}\r\n\r\nclass Zombie extends Phaser.Physics.Arcade.Sprite\r\n{\r\n    constructor (scene, x, y){\r\n        super(scene, x, y, \"zombieIdleSheet\");\r\n        this.direction = 1;\r\n        this.dead = false;\r\n        this.target = null;\r\n    }\r\n\r\n    attack(target) {\r\n        this.target = target;\r\n    }\r\n\r\n    die() {\r\n        this.dead = true;\r\n        this.body.velocity.x = 0;\r\n        if (this.direction == 1) {\r\n            this.setScale(-1, 1);\r\n            this.setOffset(settings.zombieOffsetXLeft, settings.zombieOffsetY);\r\n        } else {\r\n            this.setScale(1, 1);\r\n            this.setOffset(settings.zombieOffsetXRight, settings.zombieOffsetY);\r\n        }\r\n        this.anims.play(\"zombieDead\", true);\r\n        this.once(Phaser.Animations.Events.ANIMATION_COMPLETE_KEY + \"zombieDead\", () => {\r\n            this.setActive(0);\r\n        })\r\n    }\r\n\r\n    update() {\r\n        if (this.target != null && !this.dead) {\r\n            const bodyX = this.body.position.x;\r\n            const bodyY = this.body.position.y;\r\n            const targetX = this.target.body.position.x;\r\n            const targetY = this.target.body.position.y;\r\n\r\n            if (Phaser.Math.Difference(targetX, bodyX) < 1) {\r\n                this.body.velocity.x = 0;\r\n\r\n            }\r\n            else if (targetX < bodyX) {\r\n                this.body.velocity.x = -settings.zombieWalkSpeed;\r\n            }\r\n            else if (targetX > bodyX) {\r\n                this.body.velocity.x = settings.zombieWalkSpeed;\r\n            }\r\n    \r\n            if ((this.body.blocked.left || this.body.blocked.right) && this.body.velocity.y == 0) {\r\n                this.body.velocity.y = -settings.zombieWalkSpeed*3;\r\n            }\r\n        }\r\n        \r\n        if (this.body.velocity.y < 0) {\r\n            this.anims.play(\"zombieJump\", true);\r\n        }\r\n        else if (this.body.velocity.y > 0) {\r\n            this.anims.play(\"zombieFall\", true);\r\n        }\r\n\r\n        if (this.body.velocity.x == 0 && this.anims.getName() != \"zombieAttack\" && !this.dead) {\r\n            this.anims.play(\"zombieIdle\", true);\r\n        }\r\n        else if (this.body.velocity.x < 0 && this.body.velocity.y == 0) {\r\n            this.anims.play(\"zombieWalk\", true);\r\n            this.direction = -1;\r\n            this.setScale(-1, 1);\r\n            this.setOffset(settings.zombieOffsetXLeft, settings.zombieOffsetY);\r\n            this.zombieDirection = -1;\r\n        }\r\n        else if (this.body.velocity.x > 0 && this.body.velocity.y == 0) {\r\n            this.anims.play(\"zombieWalk\", true);\r\n            this.direction = 1;\r\n            this.setScale(1, 1);\r\n            this.setOffset(settings.zombieOffsetXRight, settings.zombieOffsetY);\r\n            this.zombieDirection = 1;\r\n        }\r\n\r\n        if (this.body.onFloor()) {\r\n            if (this.body.velocity.x < 0.1 && this.body.velocity.x > -0.1) {\r\n                this.body.velocity.x = 0;\r\n            } else {\r\n                this.body.velocity.x *= 0.7;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Bullet extends Phaser.Physics.Arcade.Sprite\r\n{\r\n    constructor (scene){\r\n        super(scene, 0, 0, \"bullet\");\r\n        this.hasKilled = false;\r\n    }\r\n\r\n    fire(shooter, direction)\r\n    {\r\n        if (direction == 1) {\r\n            this.setPosition(shooter.x + 33, shooter.y + 19);\r\n            this.speed = settings.bulletSpeed;\r\n        } \r\n        else if (direction == -1) {\r\n            this.setPosition(shooter.x - 33, shooter.y + 19);\r\n            this.speed = -settings.bulletSpeed;\r\n        }\r\n\r\n        this.lifespan = 1000;\r\n    }\r\n\r\n    preUpdate(time, delta) {\r\n        super.preUpdate(time, delta);\r\n        this.lifespan -= delta;\r\n        this.x += this.speed * delta;\r\n\r\n        if (this.lifespan <= 0)\r\n        {\r\n            this.destroy();\r\n        }\r\n    }\r\n}","import Level1 from \"./Level1\"\nimport Level2 from \"./Level2\"\n\nlet game;\n\nconst settings = {\n    gravity: 700,\n    soldierWalkSpeed: 100,\n    soldierRunSpeed: 330,\n    soldierSizeX: 28,\n    soldierSizeY: 63,\n    soldierOffsetY: 64,\n    soldierOffsetXRight: 45,\n    soldierOffsetXLeft: 73,\n    zombieWalkSpeed: 100,\n    zombieRunSpeed: 350,\n    zombieSizeX: 20,\n    zombieSizeY: 64,\n    zombieOffsetY: 32,\n    zombieOffsetXRight: 35,\n    zombieOffsetXLeft: 55,\n    bulletSpeed: 1.2,\n    restartTime: 1000,\n}\n\nwindow.onload = () => {\n    let gameConfig = {\n        type: Phaser.AUTO,\n        scale: {\n            mode: Phaser.Scale.FIT,\n            autoCenter: Phaser.Scale.CENTER_BOTH,\n            width: 1728,\n            height: 992,\n        },\n        pixelArt: true,\n        backgroundColor: \"#808080\",\n        physics: {\n            default: \"arcade\",\n            arcade: {\n                debug: true,\n                gravity: {\n                    y: 0\n                },\n            }\n        },\n        scene: [Bootloader, Level1, Level2]\n    }\n    game = new Phaser.Game(gameConfig);\n    window.focus();\n}\n\nclass Bootloader extends Phaser.Scene {\n    constructor () {\n        super(\"Bootloader\")\n    }\n\n    create() {\n        this.data = {\n            config: game.config,\n            settings: settings,\n        }\n        this.scene.start(\"Level2\", this.data)\n    }\n}"]}